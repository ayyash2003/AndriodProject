// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cityLabel;

  @NonNull
  public final Spinner citySpinner;

  @NonNull
  public final EditText confirmPassword;

  @NonNull
  public final TextView confirmPasswordLabel;

  @NonNull
  public final Button createAccountButton;

  @NonNull
  public final EditText email;

  @NonNull
  public final TextView emailLabel;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final RadioGroup genderGroup;

  @NonNull
  public final TextView genderLabel;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final EditText name;

  @NonNull
  public final TextView nameLabel;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView passwordLabel;

  private ActivityLoginPageBinding(@NonNull ConstraintLayout rootView, @NonNull TextView cityLabel,
      @NonNull Spinner citySpinner, @NonNull EditText confirmPassword,
      @NonNull TextView confirmPasswordLabel, @NonNull Button createAccountButton,
      @NonNull EditText email, @NonNull TextView emailLabel, @NonNull RadioButton female,
      @NonNull RadioGroup genderGroup, @NonNull TextView genderLabel, @NonNull RadioButton male,
      @NonNull EditText name, @NonNull TextView nameLabel, @NonNull EditText password,
      @NonNull TextView passwordLabel) {
    this.rootView = rootView;
    this.cityLabel = cityLabel;
    this.citySpinner = citySpinner;
    this.confirmPassword = confirmPassword;
    this.confirmPasswordLabel = confirmPasswordLabel;
    this.createAccountButton = createAccountButton;
    this.email = email;
    this.emailLabel = emailLabel;
    this.female = female;
    this.genderGroup = genderGroup;
    this.genderLabel = genderLabel;
    this.male = male;
    this.name = name;
    this.nameLabel = nameLabel;
    this.password = password;
    this.passwordLabel = passwordLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city_label;
      TextView cityLabel = ViewBindings.findChildViewById(rootView, id);
      if (cityLabel == null) {
        break missingId;
      }

      id = R.id.city_spinner;
      Spinner citySpinner = ViewBindings.findChildViewById(rootView, id);
      if (citySpinner == null) {
        break missingId;
      }

      id = R.id.confirm_password;
      EditText confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.confirm_password_label;
      TextView confirmPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordLabel == null) {
        break missingId;
      }

      id = R.id.create_account_button;
      Button createAccountButton = ViewBindings.findChildViewById(rootView, id);
      if (createAccountButton == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.email_label;
      TextView emailLabel = ViewBindings.findChildViewById(rootView, id);
      if (emailLabel == null) {
        break missingId;
      }

      id = R.id.female;
      RadioButton female = ViewBindings.findChildViewById(rootView, id);
      if (female == null) {
        break missingId;
      }

      id = R.id.gender_group;
      RadioGroup genderGroup = ViewBindings.findChildViewById(rootView, id);
      if (genderGroup == null) {
        break missingId;
      }

      id = R.id.gender_label;
      TextView genderLabel = ViewBindings.findChildViewById(rootView, id);
      if (genderLabel == null) {
        break missingId;
      }

      id = R.id.male;
      RadioButton male = ViewBindings.findChildViewById(rootView, id);
      if (male == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_label;
      TextView nameLabel = ViewBindings.findChildViewById(rootView, id);
      if (nameLabel == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_label;
      TextView passwordLabel = ViewBindings.findChildViewById(rootView, id);
      if (passwordLabel == null) {
        break missingId;
      }

      return new ActivityLoginPageBinding((ConstraintLayout) rootView, cityLabel, citySpinner,
          confirmPassword, confirmPasswordLabel, createAccountButton, email, emailLabel, female,
          genderGroup, genderLabel, male, name, nameLabel, password, passwordLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
